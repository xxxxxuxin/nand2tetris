// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    Not(in=reset, out=nreset);
    Not(in=load, out=nload);
    Not(in=inc, out=ninc);

    Or(a=reset, b=load, out=zx);

    Or(a=load, b=inc, out=nxtmp);
    And(a=nreset, b=nxtmp, out=nx);

    Or(a=reset, b=nload, out=zy);

    And(a=nreset, b=nload, out=ny);

    And(a=nload, b=inc, out=tmp);
    Or(a=reset, b=tmp, out=f);
    And(a=nreset, b=tmp, out=no);

    Register(in=outnow, load=true, out=out, out=outloop);

    ALU(x=outloop, y=in, zx=zx,nx=nx,zy=zy,ny=ny,f=f,no=no,out=outnow, zr=zr,ng=ng);
}
